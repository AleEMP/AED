#include <iostream>
#include <ctime> 
using namespace std;

//POLIMORFISMO
/*
struct orden {
	virtual bool ord(int,int) = 0;
};
struct lss : orden {
	bool ord(int a,int b) {
		return a < b;
	}
};
struct grter : orden {
	bool ord(int a, int b) {
		return a > b;
	}
};
void sort(int *arry,int m, orden * p) {
    int i, j;
    for (i = 0; i < m; ++i){
        for (j = 0; j < m - i - 1; ++j){
            if (p->ord(arry[j], arry[j + 1]))
            {
                arry[j] = arry[j] + arry[j + 1];
                arry[j + 1] = arry[j] - arry[j + 1];
                arry[j] = arry[j] - arry[j + 1];
            }
        }
    }
}
*/

//FUNCTOR

struct lss {
    bool ord(int a, int b) {
        return a < b;
    }
};
struct grter {
    bool ord(int a, int b) {
        return a > b;
    }
};

template <class t>
void sort(int* arry, int m, t p) {
    int i, j;
    for (i = 0; i < m; ++i) {
        for (j = 0; j < m - i - 1; ++j) {
            if (p.ord(arry[j], arry[j + 1])){
                arry[j] = arry[j] + arry[j + 1];
                arry[j + 1] = arry[j] - arry[j + 1];
                arry[j] = arry[j] - arry[j + 1];
            }
        }
    }
}

//FUNCTOR INLINE
/*struct lss {
    inline bool ord(int a, int b) {
        return a < b;
    }
};
struct grter {
    inline bool ord(int a, int b) {
        return a > b;
    }
};

template <class t>
void sort(int* arry, int m, t p) {
    int i, j;
    for (i = 0; i < m; ++i) {
        for (j = 0; j < m - i - 1; ++j) {
            if (p.ord(arry[j], arry[j + 1])) {
                arry[j] = arry[j] + arry[j + 1];
                arry[j + 1] = arry[j] - arry[j + 1];
                arry[j] = arry[j] - arry[j + 1];
            }
        }
    }
}
*/
int main()
{
    unsigned t0, t1;
    t0 = clock();
    int arr[1000] = { 758, 345, -123, 987, 564, 890, -432, 679, 234, 567, -987, 876, 123, -567, 890, 234, -456, 789, -987, 654, 321, -876, 543, 890, -654, 321, 789, -543, 678, 901, -234, 567, 890, -321, 876, 543, -789, 012, 345, -678, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876, 901, 234, -567, 890, 123, -876 }; 
  
    //Polimorfismo
    
    /*grter owo;
    lss ewe;
    sort(arr, 5, &ewe);*/
    

    //FUNCTOR
    
    grter owo;
    lss ewe;
    sort (arr, 5, ewe);
    

    //FUNCTOR INLINE
    /*  
    grter owo;
    lss ewe;
    sort(arr, 1000, ewe);
    */
    t1 = clock();
    for (int i = 0; i < 1000; i++)
    {
        cout << arr[i] << " ";
    }
    cout << endl;
    double time = (double(t1 - t0) / CLOCKS_PER_SEC);
    cout << "Execution Time: " << time << endl;
    // Polimorfismo: 2e-06
    //Functor: 1e-06
    //functor inline: 0.000483
}